#name: build
#
#on:
#  push:
#    branches:
#      - develop
#
#  pull_request:
#    branches:
#      - develop
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.TOKEN }}
#          submodules: true
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - uses: mirromutth/mysql-action@v1.1
#        with:
#          host port: 3306
#          container port: 3306
#          mysql database: 'testdb'
#          mysql root password: ${{ secrets.DB_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
#
#
#      - name: Redis 설치
#        uses: shogo82148/actions-setup-redis@v1
#        with:
#          redis-version: '6.x'
#          run: redis-cli ping
#
#      - name: Create mongo Docker container
#        uses: DigiPie/mongo-action@v2.0.1
#        with:
#          image_version: latest
#          port: 27017
#      - name: Install mongosh command
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y wget gnupg
#          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
#          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
#          sudo apt-get update
#          sudo apt-get install -y mongodb-mongosh
#
#
#      - name: Test mongo connection
#        run: "sudo mongosh localhost:27017"
#
#      #      - name: application.yml created
#      #        uses: actions/checkout@v3
#      #      - run: touch ./src/main/resources/application.yml
#      #      - run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
#      #      - uses: actions/upload-artifact@v3
#      #        with:
#      #          name: application.yml
#      #          path: ./src/main/resources/application.yml
#      #
#      #
#      #      - name: application-test.yml created
#      #        uses: actions/checkout@v3
#      #
#      #      #      - run: mkdir /src/test/resources
#      #      #      - run: touch ./src/test/resources/application.yml
#      #      - run: mkdir ./src/test/resources
#      #      - run: cd ./src/test/resources
#      #      - run: touch ./application.yml
#      #      - run: echo "${{ secrets.APPLICATION_TEST_YML }}" > ./src/test/resources/application.yml
#      #      - uses: actions/upload-artifact@v3
#      #        with:
#      #          name: application.yml
#      #          path: ./src/test/resources/application.yml
#
#
#      - name: Grant execute permission for gradle
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build -Pprofile=dev
